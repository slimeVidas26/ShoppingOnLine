{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/cart.service.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/categories/categories.component.css","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/category.service.ts","webpack:///./src/app/city.ts","webpack:///./src/app/formdata-upload/formdata-upload.component.html","webpack:///./src/app/formdata-upload/formdata-upload.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/infos/infos.component.css","webpack:///./src/app/infos/infos.component.html","webpack:///./src/app/infos/infos.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/manage-products/manage-products.component.css","webpack:///./src/app/manage-products/manage-products.component.html","webpack:///./src/app/manage-products/manage-products.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/order.service.ts","webpack:///./src/app/order/order.component.css","webpack:///./src/app/order/order.component.html","webpack:///./src/app/order/order.component.ts","webpack:///./src/app/product.ts","webpack:///./src/app/products.service.ts","webpack:///./src/app/products/products.component.css","webpack:///./src/app/products/products.component.html","webpack:///./src/app/products/products.component.ts","webpack:///./src/app/select-modal/select-modal.component.css","webpack:///./src/app/select-modal/select-modal.component.html","webpack:///./src/app/select-modal/select-modal.component.ts","webpack:///./src/app/shipping/shipping.component.css","webpack:///./src/app/shipping/shipping.component.html","webpack:///./src/app/shipping/shipping.component.ts","webpack:///./src/app/shop/shop.component.css","webpack:///./src/app/shop/shop.component.html","webpack:///./src/app/shop/shop.component.ts","webpack:///./src/app/sign-in/sign-in.component.css","webpack:///./src/app/sign-in/sign-in.component.html","webpack:///./src/app/sign-in/sign-in.component.ts","webpack:///./src/app/token-interceptor.service.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<p>\\n  Why you should by in our store (write here few words with picture)\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n        <div class=\\\"  col-md-4 box form-group\\\">\\n            <div class=\\\"inner\\\">\\n                <div class=\\\"col-md-12\\\">\\n                   \\n                    <manage-products *ngIf=\\\"selectedProduct\\\" [product]=\\\"selectedProduct\\\"  > \\n                    </manage-products>                  \\n                    \\n                  </div>\\n              </div>\\n         \\n        </div>\\n    \\n        <!-- <div\\n        class=\\\" col-md-4 box form-group\\\"\\n        [ngStyle]=\\\"style\\\"\\n        mwlResizable\\n        [validateResize]=\\\"validate\\\"\\n        [resizeEdges]=\\\"{bottom: true, right: true, top: true, left: true}\\\"\\n        [enableGhostResize]=\\\"true\\\"\\n        [resizeSnapGrid]=\\\"{left: 50, right: 50}\\\"\\n        (resizeEnd)=\\\"onResizeEnd($event)\\\">\\n        <img\\n          src=\\\"http://i.imgur.com/eqzz2dl.gif\\\"\\n          class=\\\"resize-handle\\\"\\n          mwlResizeHandle\\n          [resizeEdges]=\\\"{bottom: true, right: true}\\\">\\n          <div class=\\\"inner\\\">\\n                <div class=\\\"col-md-12\\\">\\n                   \\n                  <cart></cart>\\n                  \\n                    \\n                  </div>\\n              </div>\\n      </div> -->\\n        <div class=\\\"  col-md-8 box form-group\\\">\\n                <div class=\\\"row\\\">\\n                        <div class=\\\"inner\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                  <!-- <categories [parentData] = \\\"categories\\\"></categories> -->\\n        <categories (selectCategory) = \\\"onSelectCategory($event)\\\" [categories] = \\\"categories\\\"></categories>\\n    \\n                                  </div>\\n                              </div>\\n                </div>\\n    \\n    \\n    \\n                \\n            <div class=\\\"row row-product\\\">\\n                    <div class=\\\"inner\\\">\\n                            <div class=\\\"col-md-12\\\">\\n         <products *ngIf =\\\"selectedCategory\\\"  [category] = \\\"selectedCategory\\\" ></products>\\n                              </div>\\n                          </div>\\n            </div>\\n            <div class=\\\"row row-product\\\">\\n                <div class=\\\"inner\\\">\\n                        <div class=\\\"col-md-12\\\">\\n         <products (selectProduct)=\\\"onSelectProduct($event)\\\" [products] = \\\"products\\\" ></products>\\n                          </div>\\n                      </div>\\n        </div>\\n            \\n         \\n        </div>\\n        \\n      </div>\\n      \\n    \\n    \"","import { Component, OnInit } from '@angular/core';\nimport { Category } from '../category';\nimport { CategoryService } from '../category.service';\nimport { Product } from '../product';\nimport { ProductsService } from '../products.service';\nimport {Router , ParamMap} from '@angular/router';\nimport {ActivatedRoute} from '@angular/router';\n\n\n@Component({\n  selector: 'admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  categories : Array<Category>;\n  selectedCategory : Category;\n  products : Array<Product>;\n  public id : string;\n  selectedProduct : Product;\n\n\n  constructor(private _categoryService: CategoryService,\n    private _productsService: ProductsService,\n    private route : ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this._categoryService.getCategories()\n.subscribe(resCategoryData=>this.categories = resCategoryData);\nconsole.log(this.categories);\nthis.route.paramMap.subscribe((params : ParamMap)=>{\n  this.id = params.get('id');\n\n  this._productsService.getproductsByCategory({id:this.id})\n  .subscribe(resProductsData=>this.products = resProductsData)\n console.log('pro',this.products);\n });\n this._productsService.getProducts()\n .subscribe(resProductsData=>this.products = resProductsData);\n console.log(this.products);\n \n  }\n\n  onSelectCategory(category : any){ \n    // this.selectedCategory = category;\n    this.selectedCategory = category;\n    //this.selectedProduct = this.products\n\n}\n\nonSelectProduct(product : any){ \n  // this.selectedCategory = category;\n  this.selectedProduct = product;\n  //this.selectedProduct = this.products\n\n}\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { ShopComponent } from './shop/shop.component';\nimport { OrderComponent } from './order/order.component';\nimport { AdminComponent } from './admin/admin.component';\n\n\n\n  const routes: Routes = [\n    {path : '',redirectTo : '/home' , pathMatch :'full'},\n    {path : 'home', component : HomeComponent},\n    {path : 'signin', component :SignInComponent },\n    {path : 'shop', component :ShopComponent },\n      {path : 'order', component :OrderComponent },\n      {path : 'admin', component :AdminComponent },\n      {path : 'shop/category/:id', component :ShopComponent },\n      {path : 'admin/category/:id', component :AdminComponent },\n      {path : 'shop/product/:id', component :ShopComponent }\n    ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".container{\\r\\n    background-color:white;\\r\\n    max-width: 1317px;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<navbar></navbar>\\n\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n  <!-- <home></home> -->\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {NgbModule, NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { NgBootstrapFormValidationModule } from 'ng-bootstrap-form-validation';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HttpClientModule , HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { AuthGuard } from './auth.guard';\n//import { UserService } from './user.service';\nimport {CartService} from  './cart.service';\n\n\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport {FormdataUploadComponent} from './formdata-upload/formdata-upload.component'\nimport { LoginComponent } from './login/login.component';\nimport { AboutComponent } from './about/about.component';\nimport { InfosComponent } from './infos/infos.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { ShopComponent } from './shop/shop.component';\nimport { CartComponent } from './cart/cart.component';\nimport { ProductsComponent } from './products/products.component';\nimport { OrderComponent } from './order/order.component';\nimport { ShippingComponent } from './shipping/shipping.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { ManageProductsComponent } from './manage-products/manage-products.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { SelectModalComponent, NgbdModalContent } from './select-modal/select-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    LoginComponent,\n    AboutComponent,\n    InfosComponent,\n    SignInComponent,\n    ShopComponent,\n    CartComponent,\n    ProductsComponent,\n    OrderComponent,\n    ShippingComponent,\n    AdminComponent,\n    ManageProductsComponent,\n    CategoriesComponent,\n    SelectModalComponent,\n    NgbdModalContent,\n    FormdataUploadComponent,\n\n  ],\n  //  entryComponents: [NgbdModalContent],\n\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule.forRoot(),\n    AngularFontAwesomeModule,\n     FormsModule,\n     ReactiveFormsModule,\n     NgBootstrapFormValidationModule.forRoot(),\n     ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\n     ResizableModule,\n     FlexLayoutModule,\n     HttpClientModule,\n   \n   \n  ],\n  providers: [ NgbModal  ,  AuthGuard,{ \n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    },Location , CartService],\n  bootstrap: [AppComponent],\n \n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot , Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private api: UserService, private router: Router) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      console.log('guarded route:',next.routeConfig.path);   \n      console.log('route data:',next.data);\n      console.log('user level:',this.api.role);\n      if(next.data) {        \n        if(next.data.minLevelAllowed) { // request to validate route against level\n          if( this.api.role < next.data.minLevelAllowed ) {\n            this.router.navigate(['/login']);\n          }\n        }\n        else if( next.data.onlyNotLogged ) { // request to validate route against logged status\n          if( this.api.role != 0 ) {\n            this.router.navigate(['/']);\n          }\n        } \n        else if( next.data.redirectAdmin && this.api.role==\"admin\" ) {\n          this.router.navigate([next.data.redirectAdmin]);\n        }\n      }\n\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Http, Response} from '@angular/http';\n// import 'rxjs/add/operator/map' ;\n// import 'rxjs/add/operator/catch';\nimport { HttpClient } from '@angular/common/http';\nimport {BehaviorSubject, Observable, Subject, Subscriber} from 'rxjs';\nimport {Product} from './product';\nimport { CartState } from './CartState';\n//import {of} from 'rxjs/observable/of';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  // private itemsInCartSubject: BehaviorSubject<Product[]> = new BehaviorSubject([]);\n   //private itemsInCart: Product[] = [];\n\n  private _endpointCartService = `http://localhost:3000/shopping/api/cart-detail`;\n  \n  constructor(private _http : HttpClient) {\n      //this.itemsInCartSubject.subscribe(_ => this.itemsInCart = _);\n   }\n  //private itemsInCartSubject: BehaviorSubject<Product[]> = new BehaviorSubject([]);\n  private cartSubject = new Subject<CartState>();\n  ProductsCart : Product[]= [];\n  CartState = this.cartSubject.asObservable();\n\n\n  // public getItems(): Observable<Product[]> {\n  //   return this.itemsInCartSubject;\n  // }\n\n  addProduct(_product:any) {\n    console.log('in service');\n    this.ProductsCart.push(_product)\n    this.cartSubject.next(<CartState>{ products:  this.ProductsCart});\n    this.getCartProducts();\n  }\n\n\n\n  // removeProduct(id:any = null) {\n  //   let call = this._endpointCartService;\n  //   if(id) {\n  //     call += `/${id}`; \n  //   }\n  //   return this._http.delete< any >(this._endpointCartService);\n  // }\n\n  \n\n\n  // public addToCart(item: Product) {\n  //   // this.itemsInCartSubject.next([...this.itemsInCart, item]);\n  // }\n\n  // getCarProducts(params) : Observable <any> {\n  //   let call = `${this._endpointCartService}/5b8acd30d1bfe441b830934d`;\n  //   return this._http.get< any >(call);\n  // }\n\n  getCartProducts(id:any = null) {\n    let call = this._endpointCartService; // default GET /users\n    if(id) {\n      call += `/${id}`; // have user id GET /users/:id\n    }\n    return this._http.get< any >(call);\n  }\n\n  \n\n  \n\n  addProdToCart(params){\n    return this._http.post< any >(`${this._endpointCartService}/add`,params);\n    //getProducts()\n  }\n\n  // public removeFromCart(item: Product) {\n  //   const currentItems = [...this.itemsInCart];\n  //   const itemsWithoutRemoved = currentItems.filter(_ => _.id !== item.id);\n  //   this.itemsInCartSubject.next(itemsWithoutRemoved);\n  // }\n\n  // public getTotalAmount(): Observable<number> {\n  //   return this.itemsInCartSubject.map((items: Product[]) => {\n  //     return items.reduce((prev, curr: Product) => {\n  //       return prev + curr.price;\n  //     }, 0);\n  //   });\n  // }\n}\n","module.exports = \".back-to-top{\\r\\n    float:right;\\r\\n    text-decoration: underline;\\r\\n    cursor:pointer\\r\\n}\\r\\n\\r\\n.cartImg{\\r\\n    width : 4rem;\\r\\n}\\r\\n\\r\\n.table td, .table th {\\r\\n     padding:0; \\r\\n     vertical-align: middle; \\r\\n    border-top: 1px solid #dee2e6;\\r\\n    margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\n\\n\\n\\n<div class=\\\"row start\\\">\\n    <div class=\\\"col-md-12\\\">\\n   <span>My Cart</span>\\n   <a routerLink=\\\"/shop\\\" routerLinkActive=\\\"active\\\" class=\\\"back-to-top\\\">back to shop</a>\\n\\n   <hr>\\n    </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <!-- <ul>\\n        <li>Cart item : product name ,  quantity , price , picture</li>\\n        <li>Cart item : product name ,  quantity , price , picture</li>\\n\\n        <li>Cart item : product name ,  quantity , price , picture</li>\\n\\n      </ul> -->\\n    \\n      <table class=\\\"table table-hover\\\">\\n          <thead>\\n            <!-- <tr *ngIf=\\\"productsBis.length > 0\\\"> -->\\n                <tr>\\n                  \\n              <th scope=\\\"col\\\">Picture</th>\\n              <th scope=\\\"col\\\">product name</th>\\n              <th scope=\\\"col\\\">quantity</th>\\n              <th scope=\\\"col\\\">price</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n           \\n            \\n            <tr *ngFor=\\\"let product of productsCart ;let i = index\\\"  class=\\\"table-primary\\\">\\n              <!-- <th scope=\\\"row\\\">Primary</th> -->\\n\\n              <td> <img class=\\\"cartImg\\\" [src]= \\\" 'http://localhost:3000/'+product.picture\\\"></td>\\n              <td>{{product.product_name}}</td>\\n              <td>{{product.quantity}}</td>\\n              <td>{{product.price}}</td>\\n              <td><button (click)=\\\"removeProduct(product)\\\" class=\\\"btn btn-xs btn-danger\\\">X</button></td>\\n            </tr>\\n          </tbody>\\n        </table> \\n      <!-- <p style=\\\"color:red\\\">No changes permitted here</p> -->\\n     <!-- <div class=\\\"alert alert-dismissible alert-danger\\\"> -->\\n          <div class=\\\"alert alert-dismissible alert-danger\\\">\\n\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\">&times;</button>\\n          <strong>Oh snap!</strong> <a href=\\\"#\\\" class=\\\"alert-link\\\" data-uid=\\\"uid89735\\\">No changes permitted here</a> \\n        </div>\\n\\n      <!-- <p>total :{{getTotalAmount()}}</p> -->\\n      <tr class=\\\"warning\\\">\\n        <td><h4></h4></td>\\n        <!-- <td><h4>Total Items: {{totalQuantity}}</h4></td> -->\\n        <td><h4>Total: ${{total}}</h4></td>\\n        <td><button routerLink=\\\"/order\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-md btn-success\\\">Checkout</button></td>\\n      </tr>\\n     \\n      <!-- <a (click) = \\\"addNewOrder()\\\" routerLink=\\\"/order\\\" routerLinkActive=\\\"active\\\">order</a> -->\\n    \\n    </div>\\n    </div>\\n\\n    <!-- //<p>You have {{shoppingCartItems.length}} items in your bag</p> -->\\n\\n     \\n     \\n    \\n    \\n\"","import { Component, OnInit , OnDestroy, Input } from '@angular/core';\nimport {CartService} from '../cart.service';\nimport {OrderService} from '../order.service';\nimport {Product} from '../product';\nimport { ActivatedRoute } from '@angular/router';\nimport {Router , ParamMap,} from '@angular/router';\nimport { UserService } from '../user.service';\n\n\nimport {Subscription} from 'rxjs';\nimport {CartState} from '../CartState';\nimport {Observable} from 'rxjs';\nimport {of} from 'rxjs';\nimport { ProductsService } from '../products.service';\n\n\n@Component({\n  selector: 'cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  loaded : boolean = true\n  private notice = \"Loading...\";\n  productsCart : Product[];\n  private subscription : Subscription;\n  public createParams:any;\n  logged:any = null; \n  public currentCart : any;\n  public total : number;\n\n  // public shoppingCartItems$: Observable<Product[]> = of([]);\n  // public shoppingCartItems: Product[] = [];\n  \n\n  constructor(private _cartService : CartService,\n              private _productsService : ProductsService,\n              private _router: Router,\n                private _orderService: OrderService,\n                private _userService: UserService,\n                private activatedRoute: ActivatedRoute) {\n\n                  this.logged = this._userService.logged;\n\n                 \n  }\n\n    \n   \n   \n\n  ngOnInit() {\n    // this.loaderService.show();\n    this.currentCart = this.logged.user.cart;\n    console.log('currentCar',this.currentCart)\n\n    this._cartService.getCartProducts(this.currentCart)\n    .subscribe(resProductsData=>this.productsCart = resProductsData.product);\n    console.log(this.productsCart);\n\n  //   this.activatedRoute.queryParams.subscribe(params => {\n  //     let shop = params['shop'];\n  //     console.log(shop); // Print the parameter to the console. \n  // });\n    \n\n    this.subscription = this\n    ._cartService\n    .CartState\n    .subscribe((state : CartState) => {\n        this.productsCart = state.products;\n        console.log(\"zis\",this.productsCart);\n    }); \n\n    // this._productsService.getProducts()\n    // .subscribe(resProductsData=>this.productsBis = resProductsData);\n    // console.log(this.productsBis);\n    \n    \n   \n  }\n\n  removeProduct(product){\n    alert('produc to remove')\n  }\n\n  \n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n}\n\n// getTotalAmount(){\n//   this._cartService.getCartProducts(this.currentCart)\n//   .subscribe(resProductsData=>this.total = resProductsData.total_amount);\n//   console.log(this.total);\n\n//   return this.total || 0;\n\n// }\n\n addNewOrder(){\n  \n  // this.createParams.city =this.tmp.city.trim(); \n  // this.createParams.adress =this.tmp.adress.trim(); \n  // this.createParams.first_name =this.tmp.first_name.trim(); \n  // this.createParams.last_name =this.tmp.last_name.trim(); \n  // console.log('params',this.createParams)\n  //  if(this.createParams.city!=''&& this.createParams.adress !='' &&\n  //   this.createParams.first_name !='' && this.createParams.last_name !='' ) {\n    this._orderService.createOrder(this.createParams).subscribe( \n      result => {\n        console.log(result);\n      },\n      error => {\n        alert('error!');\n      }\n    ),\n this._router.navigate(['order'])\n}\n\n\n\n\n\n  // public getTotal(): Observable<number> {\n  //   return this._cartService.getTotalAmount();\n  // }\n\n  // public removeItem(item: Product) {\n  //   this._cartDetailService.removeFromCart(item)\n  // }\n\n}\n","module.exports = \"\"","module.exports = \" <div class=\\\"row\\\">\\n       <ul class=\\\"nav\\\">\\n        \\n        <li (click) = \\\"onSelect(category)\\\"  *ngFor = \\\"let category of categories\\\" class=\\\"nav-item\\\">\\n          <a  class=\\\"nav-link active\\\">{{category.category_name}}</a>\\n        </li>\\n         <!-- <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n        </li>\\n       \\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n        </li> -->\\n        \\n         \\n      </ul>\\n</div> \\n\"","import { Component, OnInit , Input , EventEmitter } from '@angular/core';\nimport {Router, ParamMap} from '@angular/router';\nimport {ActivatedRoute} from '@angular/router';\nimport { Category } from '../category';\nimport {UserService } from '../user.service';\n\n\n@Component({\n  selector: 'categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css'],\n    inputs : ['categories'],\n    outputs : ['selectCategory']\n})\nexport class CategoriesComponent implements OnInit {\n  //@Input('parentData') public categories ;\n  public categoryId;\n  public selectCategory = new EventEmitter();\n  logged:any = null;\n\n  constructor(   private router : Router,\n                 private route : ActivatedRoute,\n                 private _userService: UserService) {\n                  this.logged = this._userService.logged;\n                  }\n\n  ngOnInit() {\n     \n  }\n\n  \n\n  onSelect(cat :Category ){\nif(this.logged.user.role==\"Admin\"){\n    this.router.navigate(['/admin/category' , cat._id]);\n  }\n  else{\n    this.router.navigate(['/shop/category' , cat._id]);\n  }\n  this.selectCategory.emit(cat);\n  }\n\n   \n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  \n  private _endpointCategories = `http://localhost:3000/shopping/api/categories`;\n  constructor(private _http : HttpClient) { }\n\n  \n\n  getCategories(params:any = null) {\n    let call = this._endpointCategories; \n    if(params) {\n      if(params.pid) {\n        call += `/${params.pid}`; // have categories id GET /categories/:id\n      }\n         \n    }\n    return this._http.get< any >(call);\n  }\n}\n","export class City {\n    constructor(public id: number, public name: string) { }\n  }\n","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Bob\\\" formControlName=\\\"name\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"avatar\\\">Picture</label>\\n    <input type=\\\"file\\\" id=\\\"picture\\\" (change)=\\\"onFileChange($event)\\\" #fileInput>\\n    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" (click)=\\\"clearFile()\\\">clear file</button>\\n  </div>\\n  <button type=\\\"submit\\\" [disabled]=\\\"form.invalid || loading\\\" class=\\\"btn btn-success\\\">Submit <i class=\\\"fa fa-spinner fa-spin fa-fw\\\" *ngIf=\\\"loading\\\"></i></button>\\n</form>\\n\"","import {Component, ElementRef, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'formdata-upload',\n  templateUrl: './formdata-upload.component.html'\n})\nexport class FormdataUploadComponent {\n  form: FormGroup;\n  loading: boolean = false;\n\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n  constructor(private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.form = this.fb.group({\n      name: ['', Validators.required],\n      avatar: null\n    });\n  }\n\n  onFileChange(event) {\n    if(event.target.files.length > 0) {\n      let file = event.target.files[0];\n      this.form.get('picture').setValue(file);\n    }\n  }\n\n  private prepareSave(): any {\n    let input = new FormData();\n    input.append('name', this.form.get('name').value);\n    input.append('picture', this.form.get('picture').value);\n    return input;\n  }\n\n\n  \n\n  onSubmit() {\n    const formModel = this.prepareSave();\n    this.loading = true;\n    // this.http.post('apiUrl', formModel)\n    setTimeout(() => {\n      alert('done!');\n      this.loading = false;\n    }, 1000);\n  }\n\n  clearFile() {\n    this.form.get('avatar').setValue(null);\n    this.fileInput.nativeElement.value = '';\n  }\n\n}\n","module.exports = \"/* .login{\\r\\n   \\r\\n    background-color: yellowgreen;\\r\\n}\\r\\n.about{\\r\\n  \\r\\n    background-color: rosybrown;\\r\\n}\\r\\n.infos{\\r\\n  \\r\\n    background-color:grey;\\r\\n} */\\r\\n\\r\\n/* .box {\\r\\n   \\r\\n    padding: 0 5px 0 10px;\\r\\n} */\\r\\n\\r\\n.box .inner {\\r\\n    background-color  : skyblue;\\r\\n    height:auto;\\r\\n    min-height: 520px;\\r\\n    padding : 15px;\\r\\n    margin-top: 15px;\\r\\n    border-radius:5px;\\r\\n}\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\" login col-md-4 box form-group\\\">\\n      <div class=\\\"inner\\\">\\n         <login></login>\\n        </div>\\n   \\n  </div>\\n  <div class=\\\" about col-md-4 box form-group\\\">\\n      <div class=\\\"inner\\\">\\n          <about></about>\\n         </div>\\n   \\n  </div>\\n  <div class=\\\"infos col-md-4 box form-group\\\">\\n      <div class=\\\"inner\\\">\\n          <infos></infos>\\n         </div>\\n   \\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"img{\\r\\n    width:50%;\\r\\n}\\r\\n.infos-1 , .infos-2 , .infos-3 , .infos-4 {\\r\\nmargin-bottom: 20px;\\r\\n}\\r\\n.card{\\r\\n    color:yellow;\\r\\n}\\r\\n.infos-1  img , .list-group  , .card{ display:block; margin:auto; }\\r\\n.list-group {\\r\\n     \\r\\nmargin-bottom:10px;\\r\\n }\\r\\n/* .start{\\r\\n     height:auto\\r\\n } */\"","module.exports = \"<div class=\\\"row\\\">\\n<div class=\\\" infos-1 col-md-12\\\"><img src=\\\"assets/Mix2.jpg\\\" alt=\\\"\\\"></div>\\n\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n    Available products in our store - number\\n    <span class=\\\"badge badge-primary badge-pill\\\">14</span>\\n  </li>\\n  <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n    Number of orders submitted in our store\\n    <span class=\\\"badge badge-primary badge-pill\\\">2</span>\\n  </li>\\n</ul>\\n\\n\\n<div class=\\\"card text-white bg-primary mb-3\\\" style=\\\"max-width: 20rem;\\\">\\n  <div class=\\\"card-header\\\">Notification</div>\\n  <div class=\\\"card-body\\\">\\n   \\n    <p class=\\\"card-text\\\">you have open cart from [date]/\\n      your last purchase was on [date]/</p>\\n      <h4 class=\\\"card-title\\\">Welcome [name]</h4>\\n  </div>\\n</div>\\n\\n\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'infos',\n  templateUrl: './infos.component.html',\n  styleUrls: ['./infos.component.css']\n})\nexport class InfosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".start{\\r\\n    margin-bottom: 70px\\r\\n}\\r\\n.form-control{\\r\\n    width : 60%\\r\\n}\\r\\ninput  {\\r\\n     display:block; margin:auto;\\r\\n     }\\r\\n.sign {\\r\\n    text-decoration: underline;\\r\\n    font-weight:bold\\r\\n}\\r\\nbutton {\\r\\n    margin-left : 30%;\\r\\n    margin-right : 10px\\r\\n}\\r\\nlegend {\\r\\nmargin-left : 20%;\\r\\nfont-size: 1rem;\\r\\nfont-weight:bold\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row start\\\">\\n<div class=\\\"col-md-12\\\">\\n   \\n     \\n      <div class=\\\"card text-white bg-success mb-3\\\">\\n        <div class=\\\"card-header\\\">Start shopping / resume shopping</div>\\n        <div class=\\\"card-body\\\">\\n          <h4 class=\\\"card-title\\\">Success card title</h4>\\n          <p class=\\\"card-text\\\">Available only for logged in users - secure it.</p>\\n        </div>\\n      </div>\\n    \\n    \\n\\n</div>\\n</div>\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-12\\\">\\n \\n  <form [formGroup]=\\\"formGroup\\\" (validSubmit)=\\\"doLogin()\\\">\\n        <fieldset>\\n          <legend>  Registered?</legend>\\n          <!-- <div class=\\\"form-group row\\\">\\n            <label for=\\\"staticEmail\\\" class=\\\"col-sm-2 col-form-label\\\">Email</label>\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"text\\\" readonly=\\\"\\\" class=\\\"form-control-plaintext\\\" id=\\\"staticEmail\\\" value=\\\"email@example.com\\\">\\n            </div> -->\\n          <!-- </div> -->\\n       \\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Email</label>\\n        <input [(ngModel)]=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Email\\\" placeholder=\\\"User name\\\">\\n            <!-- <label for=\\\"exampleInputEmail1\\\">Email address</label> -->\\n            <!-- <input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"User name\\\"> -->\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"control-label\\\">Password</label>\\n              <input  [(ngModel)]=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\" placeholder=\\\"Password\\\">\\n            <!-- <label for=\\\"exampleInputPassword1\\\">Password</label> -->\\n            <!-- <input [(ngModel)]=\\\"tmp.password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\"> -->\\n          </div>\\n         \\n         \\n        \\n        \\n          <!-- <a routerLink=\\\"/shop\\\" routerLinkActive=\\\"active\\\"> -->\\n            <!-- <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Login</button>  -->\\n            <button class=\\\"btn btn-primary pull-right\\\" type=\\\"submit\\\">Login</button>\\n                   <!-- </a> -->\\n                   <a class=\\\"sign\\\" routerLink=\\\"/signin\\\" routerLinkActive=\\\"active\\\">Sign up</a>\\n         \\n        </fieldset>\\n      </form>\\n\\n\\n  \\n</div>\\n</div>\\n \\n \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport { UserService } from '../user.service';\nimport {Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  formGroup: FormGroup;\n  username:string = '';\n  password:string = '';\n  \n\n  constructor(private _userService: UserService,   private _router : Router) { }\n\n  ngOnInit() {\n    this.formGroup = new FormGroup({\n      Email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)\n      ]),\n      Password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(15)\n      ])\n    });\n  }\n\n  doLogin() {\n    console.log(this.formGroup);\n   \n      if(this.username && this.password ) {\n        //this.loginmsg.text = 'Logging, please wait...';\n        this._userService.login(this.username,this.password);\n      }\n    \n  }\n\n}\n","module.exports = \".edit {\\r\\n    margin-top:35px;\\r\\n    margin-bottom:35px;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\n <!-- <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\"    class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Bob\\\" formControlName=\\\"name\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"avatar\\\">Avatar</label>\\n    <input type=\\\"file\\\"    id=\\\"avatar\\\" (change)=\\\"onFileChange($event)\\\" #fileInput >\\n    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-default\\\" (click)=\\\"clearFile()\\\">clear file</button>\\n  </div>\\n  <button type=\\\"submit\\\" [disabled]=\\\"form.invalid || loading\\\" class=\\\"btn btn-success\\\">Submit <i class=\\\"fa fa-spinner fa-spin fa-fw\\\" *ngIf=\\\"loading\\\"></i></button>\\n</form> -->\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<div class=\\\"row start\\\">\\n  <!-- <div class=\\\"col-md-12\\\">\\n   product111    <i class=\\\"fas fa-plus\\\"></i>\\n   <hr>\\n    </div> -->\\n  <div class=\\\"list-group edit col-md-12\\\">\\n\\n    <span>product222</span> <span><i (click)=\\\"openAddForm()\\\" class=\\\"fas fa-plus\\\"></i></span>\\n    <span><i (click)=\\\"openEditForm()\\\" class=\\\"fas fa-pencil-alt\\\"></i></span>\\n\\n  </div>\\n\\n\\n  \\n\\n  <div *ngIf=\\\"isAddForm\\\">\\n    you can add products\\n    <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"createNewProduct()\\\">\\n        <!-- <div class=\\\"form-group\\\">\\n            <label for=\\\"city\\\">City</label>\\n        <select [(ngModel)]=\\\"tmp.city\\\" class=\\\"custom-select\\\" formControlName=\\\"city\\\"> -->\\n            <!-- <option value=''>-- SELECT CITY-- </option> -->\\n          <!-- <option *ngFor=\\\"let city of cities\\\" value= {{city.id}}>\\n            {{city.name}}\\n          </option>\\n        </select>\\n      </div> -->\\n        <!-- <form> -->\\n            <!-- <div class=\\\"form-group\\\">\\n                <select  [(ngModel)]=\\\"tmp.city\\\" class=\\\"custom-select\\\">\\n                  <option selected=\\\"\\\">City</option>\\n                  <option value=\\\"1\\\">Ashdod</option>\\n                  <option value=\\\"2\\\">Jerusalem</option>\\n                  <option value=\\\"3\\\">Haifa</option>\\n                </select>\\n              </div> -->\\n              <!-- <div class=\\\"form-group\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input  [(ngModel)]=\\\"tmp.city\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\" placeholder=\\\"Street\\\" required>\\n              </div> -->\\n           \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"product_name\\\">Product name</label>\\n              <input  [(ngModel)]=\\\"product_name\\\" name=\\\"product_name\\\"  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"productName\\\" placeholder=\\\"Product name\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"_id\\\">ProductId</label>\\n                <input  [(ngModel)]=\\\"_id\\\"  type=\\\"text\\\" name=\\\"_id\\\" class=\\\"form-control\\\" formControlName=\\\"productId\\\" placeholder=\\\"Product id\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"price\\\">Price</label>\\n                <input  [(ngModel)]=\\\"price\\\"  type=\\\"text\\\" name=\\\"price\\\" class=\\\"form-control\\\" formControlName=\\\"price\\\" placeholder=\\\"Price\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"picture\\\">Picture</label>\\n                <!-- <input  [(ngModel)]=\\\"tmp.picture\\\"  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"picture\\\" placeholder=\\\"Picture\\\"> -->\\n                <!-- <input [(ngModel)]=\\\"tmp.picture\\\" type=\\\"file\\\"  class=\\\"form-control\\\" formControlName=\\\"picture\\\" (change)=\\\"onFileChange($event)\\\" #fileInput> -->\\n                <!-- <input type=\\\"file\\\" [(ngModel)]=\\\"picture\\\" id=\\\"picture\\\" class=\\\"form-control\\\" formControlName=\\\"picture\\\" (change)=\\\"onFileChange($event)\\\" #fileInput> -->\\n                <input type=\\\"file\\\"    name=\\\"picture\\\" (change)=\\\"onFileChange($event)\\\" #fileInput >\\n\\n            </div>\\n            \\n                <div class=\\\"form-group\\\">\\n                    <select [(ngModel)]=\\\"category\\\" name=\\\"_category\\\"  class=\\\"custom-select\\\" formControlName=\\\"category\\\">\\n                        <!-- <option value=''>-- SELECT CATEGORY-- </option> -->\\n                      <option *ngFor=\\\"let category of categories\\\" value= {{category._id}}>\\n                        {{category.category_name}}\\n                      </option>\\n                    </select>\\n              </div>\\n              \\n           \\n                <button class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"!formGroup.valid\\\" type=\\\"submit\\\">Add Product</button>\\n      \\n           </form>\\n  </div>\\n  <div *ngIf=\\\"isEditForm\\\">\\n    you can edit products\\n   \\n    <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"createNewProduct()\\\">\\n        <!-- <div class=\\\"form-group\\\">\\n            <label for=\\\"city\\\">City</label>\\n        <select [(ngModel)]=\\\"tmp.city\\\" class=\\\"custom-select\\\" formControlName=\\\"city\\\"> -->\\n            <!-- <option value=''>-- SELECT CITY-- </option> -->\\n          <!-- <option *ngFor=\\\"let city of cities\\\" value= {{city.id}}>\\n            {{city.name}}\\n          </option>\\n        </select>\\n      </div> -->\\n        <!-- <form> -->\\n            <!-- <div class=\\\"form-group\\\">\\n                <select  [(ngModel)]=\\\"tmp.city\\\" class=\\\"custom-select\\\">\\n                  <option selected=\\\"\\\">City</option>\\n                  <option value=\\\"1\\\">Ashdod</option>\\n                  <option value=\\\"2\\\">Jerusalem</option>\\n                  <option value=\\\"3\\\">Haifa</option>\\n                </select>\\n              </div> -->\\n              <!-- <div class=\\\"form-group\\\">\\n                <label for=\\\"city\\\">City</label>\\n                <input  [(ngModel)]=\\\"tmp.city\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\" placeholder=\\\"Street\\\" required>\\n              </div> -->\\n           \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"product_name\\\">Product name</label>\\n              <input  [(ngModel)]=\\\"product.product_name\\\" name=\\\"product_name\\\"  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"productName\\\" placeholder=\\\"Product name\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"_id\\\">ProductId</label>\\n                <input  [(ngModel)]=\\\"product._id\\\"  type=\\\"text\\\" name=\\\"_id\\\" class=\\\"form-control\\\" formControlName=\\\"productId\\\" placeholder=\\\"Product id\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"price\\\">Price</label>\\n                <input  [(ngModel)]=\\\"product.price\\\"  type=\\\"text\\\" name=\\\"price\\\" class=\\\"form-control\\\" formControlName=\\\"price\\\" placeholder=\\\"Price\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"picture\\\">Picture</label>\\n                <!-- <input  [(ngModel)]=\\\"tmp.picture\\\"  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"picture\\\" placeholder=\\\"Picture\\\"> -->\\n                <!-- <input [(ngModel)]=\\\"tmp.picture\\\" type=\\\"file\\\"  class=\\\"form-control\\\" formControlName=\\\"picture\\\" (change)=\\\"onFileChange($event)\\\" #fileInput> -->\\n                <!-- <input type=\\\"file\\\" [(ngModel)]=\\\"picture\\\" id=\\\"picture\\\" class=\\\"form-control\\\" formControlName=\\\"picture\\\" (change)=\\\"onFileChange($event)\\\" #fileInput> -->\\n                <input type=\\\"file\\\"    name=\\\"picture\\\" ngModel (change)=\\\"onFileChange($event)\\\" formControlName=\\\"picture\\\" #fileInput >\\n    \\n            </div>\\n            \\n                <div class=\\\"form-group\\\">\\n                    <select [(ngModel)]=\\\"product.category\\\" name=\\\"_category\\\"  class=\\\"custom-select\\\" formControlName=\\\"category\\\">\\n                      <option *ngFor=\\\"let category of categories\\\" [value]= \\\"category._id\\\">\\n                        {{category.category_name}}\\n                      </option>\\n                    </select>\\n\\n                    \\n\\n                   \\n              </div>\\n              \\n           \\n                <button class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"!formGroup.valid\\\" type=\\\"submit\\\">Update Product</button>\\n      \\n           </form>\\n  </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <!-- <p>product name : product111</p>\\n      <p>product ID : 1</p>\\n      <p>product price : 10$</p>\\n      <p>picture : editable</p>\\n      <p>category : milk and eggs</p> -->\\n\\n    <!-- <p>\\n    <a routerLink=\\\"/admin\\\" routerLinkActive=\\\"active\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n      </a>\\n</p> -->\\n  </div>\\n</div>\\n\\n\\n\\n<!-- negated variable to achieve \\\"if not\\\" -->\\n<!-- <div *ngIf=\\\"!isLoggedIn\\\">\\n    Please login, friend.\\n  </div>\\n  \\n   logic && operator -->\\n<!-- <div *ngIf=\\\"isLoggedIn && !isNewUser\\\">\\n    Welcome back, friend.\\n  </div> -->\\n\\n<!-- logic OR operator -->\\n<!-- <div *ngIf=\\\"isLoggedIn || isNewUser\\\">\\n    Welcome!\\n  </div> -->\"","import { Component, OnInit ,ElementRef, ViewChild} from '@angular/core';\nimport {FormControl,FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { Category } from '../category';\nimport { Product } from '../product';\nimport {Router} from '@angular/router';\n\nimport {CategoryService} from '../category.service';\nimport { ProductsService } from '../products.service';\n\n\n\n\n@Component({\n  selector: 'manage-products',\n  templateUrl: './manage-products.component.html',\n  styleUrls: ['./manage-products.component.css'],\n  inputs : ['product']\n})\nexport class ManageProductsComponent implements OnInit {\n  isAddForm = false;\n  isEditForm = true;\n  loading: boolean = false;\n\n  @ViewChild('fileInput') fileInput: ElementRef;\n\n\n  formGroup: FormGroup;\n\n  createParams:any = {};\n  categories:Category[];\n  productId: any;\n  product_name: any;\n  picture: any;\n  price: any;\n  category: any;\n\n\n  constructor(private _categoryService : CategoryService,\n    private _productsService : ProductsService,\n    private fb: FormBuilder,\n    private router: Router) {  this.createForm();}\n\n    createForm() {\n      this.formGroup = this.fb.group({\n        productName: new FormControl('', [\n          Validators.required,\n        ]),\n        productId: new FormControl('', [\n          Validators.required\n         \n        ]),\n        price: new FormControl('', [\n          Validators.required\n          \n        ]),\n        picture: new FormControl('', [\n          Validators.required\n          // Validators.minLength(9),\n          // Validators.maxLength(9)\n        ]),\n        category: new FormControl('', [\n          Validators.required\n          // Validators.minLength(9),\n          // Validators.maxLength(9)\n        ])\n        \n      });\n    }\n\n  ngOnInit() {\n    this._categoryService.getCategories()\n.subscribe(resCategoryData=>this.categories = resCategoryData);\nconsole.log(this.categories);\n\n\n\n\n    // this.formGroup = new FormGroup({\n    //   productName: new FormControl('', [\n    //     Validators.required,\n    //   ]),\n    //   productId: new FormControl('', [\n    //     Validators.required\n       \n    //   ]),\n    //   price: new FormControl('', [\n    //     Validators.required\n        \n    //   ]),\n    //   picture: new FormControl('', [\n    //     Validators.required\n    //     // Validators.minLength(9),\n    //     // Validators.maxLength(9)\n    //   ]),\n    //   category: new FormControl('', [\n    //     Validators.required\n    //     // Validators.minLength(9),\n    //     // Validators.maxLength(9)\n    //   ])\n      \n    // });\n  }\n\n  openAddForm(){\n    this.isAddForm = true;\n\n    if(this.isEditForm){\n      this.isEditForm = false\n    }\n  }\n\n  openEditForm(){\n    this.isEditForm = true;\nif(this.isAddForm){\n  this.isAddForm = false\n}\n  }\n\n  // onFileChange(event) {\n  //   if(event.target.files.length > 0) {\n  //     let file = event.target.files[0].name;\n  //     console.log(\"event.target.files[0]\",file)\n  //     //this.formGroup.get('picture').setValue(file);\n  //     this.formGroup.get('picture').setValue(file, {emitModelToViewChange: false});\n  //   }\n  // }\n\n  onFileChange(event) {\n    if(event.target.files.length > 0) {\n      let file = event.target.files[0];\n      this.formGroup.get('picture').setValue(file);\n    }\n  }\n\n  private prepareSave(): any {\n    let input = new FormData();\n    console.log('avant',input)\n    input.append('productName', this.formGroup.get('productName').value);\n    input.append('productId', this.formGroup.get('productId').value);\n    input.append('price', this.formGroup.get('price').value);\n    input.append('picture', this.formGroup.get('picture').value);\n    input.append('category', this.formGroup.get('category').value);\n    console.log('apres',input)\n    return input;\n    \n  }\n\n  createNewProduct() {\n    const formModel = this.prepareSave();\n    this.loading = true;\n    this._productsService.createProduct(formModel).subscribe( \n      result => {\n        console.log(result);\n      },\n      error => {\n        alert('error!');\n      }\n    )\n     //this.http.post('apiUrl', formModel)\n    //this.createNewProduct();\n    setTimeout(() => {\n      //alert('done!');\n      this.router.navigate(['/admin/category/',this.formGroup.get('category').value]);\n\n      this.loading = false;\n    }, 1000);\n  }\n\n  //@Input()product : product;\n    AddProduct(_product : Product) {\n        //_product.added = true;\n        this._productsService.addProductToList(_product);\n    }\n\n    // editProduct() {\n    //   //_product.added = true;\n    //   const formModel = this.prepareSave();\n    //   this.loading = true;\n    //       this._productsService.updateProduct(formModel).subscribe( \n    //         result => {\n    //           console.log('result',result);\n    //           //this.router.navigate(['shop'])\n    //           //this.location.back();\n    //         },\n    //         error => {\n    //           alert('error!');\n    //         }\n    //       )   \n    // }\n\n  // createNewProduct(){\n  //   this.createParams.name =this.tmp.name.trim(); \n  //   this.createParams.avatar =this.tmp.avatar.trim(); \n  //   console.log('params',this.createParams)\n  //     this._productsService.createProduct(this.createParams).subscribe( \n  //       result => {\n  //         console.log(result);\n  //       },\n  //       error => {\n  //         alert('error!');\n  //       }\n  //     )\n  //    }\n\n  // createNewProduct(){\n  \n  //   this.createParams.product_name =this.tmp.product_name.trim(); \n  //   this.createParams._id =this.tmp._id.trim(); \n  //   this.createParams.price =this.tmp.price.trim(); \n  //   this.createParams.picture =this.tmp.picture.trim(); \n  //   this.createParams.category =this.tmp.category.trim(); \n\n  //   console.log('params',this.createParams)\n  //   //  if(this.createParams.city!=''&& this.createParams.adress !='' &&\n  //   //   this.createParams.first_name !='' && this.createParams.last_name !='' ) {\n  //     this._productsService.createProduct(this.createParams).subscribe( \n  //       result => {\n         \n  //         console.log(result);\n  //       },\n  //       error => {\n  //         alert('error!');\n  //       }\n       \n  //     )\n  //     //this._router.navigate(['/home']);\n     \n  //    }\n  }\n\n\n","module.exports = \".navbar  {\\r\\n    height : 120px;\\r\\n    background-color: brown;\\r\\n    width : 100%;\\r\\n    color:white\\r\\n    \\r\\n}\\r\\n\\r\\nnav-item li a {\\r\\n    display:inline-block;\\r\\n    text-decoration:none;\\r\\n    padding:0 10px;\\r\\n    color:#fff;\\r\\n  }\\r\\n\\r\\nnav-item li a:hover {\\r\\n    background-color:#000;\\r\\n    color:#fff;\\r\\n  }\\r\\n\\r\\n.glyphicon .glyphicon-search{\\r\\n    color:white;\\r\\n    font-size: 100px\\r\\n}\\r\\n\\r\\n.navbar-nav[_ngcontent-c1] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-left: 54%;\\r\\n    list-style: none;\\r\\n}\\r\\n\\r\\n.nav-item .contact {\\r\\n    /* width: 100px;\\r\\n    height: 50px; */\\r\\n    padding: 10px;\\r\\n    /* background-color: yellow; */\\r\\n    border : 1px;\\r\\n    box-shadow: 3px 3px 3px grey;\\r\\n}\\r\\n\\r\\n/* .nav-item {\\r\\n    float:right\\r\\n}  */\"","module.exports = \"\\n\\n  <!-- <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" >\\n      My Shop Online\\n      <! <img src=\\\"./assets/img/logo.jpg\\\"> -->\\n    <!-- </a> -->\\n   \\n        <!-- <a class=\\\"nav-link\\\"routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" >Home </a> -->\\n     \\n    <!-- <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Product name\\\"> -->\\n      <!-- <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\"><i class=\\\"fas fa-search\\\"></i></button> -->\\n      <!-- <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n\\n    </form>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n       \\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\" contact nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" >Contact phone and email</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" >Hello guest/name</a>\\n        </li>\\n        \\n      </ul>\\n     \\n    </div>\\n  </nav> -->\\n\\n\\n\\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n    <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" >\\n      My Shop Online\\n      <!-- <img src=\\\"./assets/img/logo.jpg\\\"> -->\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor01\\\" aria-controls=\\\"navbarColor01\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n  \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarColor01\\\">\\n     \\n      <form class=\\\"form-inline my-2 my-lg-0\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\">\\n        <button class=\\\"btn btn-secondary my-2 my-sm-0\\\" type=\\\"submit\\\"><i class=\\\"fas fa-search\\\"></i></button>\\n      </form>\\n     <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" data-uid=\\\"uid88529\\\">Home <span class=\\\"sr-only\\\">(current)</span>Contact phone and email</a>\\n        </li>\\n        <!-- <li class=\\\"nav-item\\\">\\n          <a class=\\\" contact nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\" >Contact phone and email</a>\\n        </li> -->\\n        <li *ngIf=\\\"logged.token\\\" class=\\\"nav-item\\\">\\n            {{dispUserName()}}\\n            <a href=\\\"#\\\" (click)=\\\"doLogout()\\\">Logout</a>\\n          <!-- <li *ngIf=\\\"logged.token\\\">{{dispUserName()}} <a href=\\\"#\\\" (click)=\\\"doLogout()\\\">Logout</a></li> -->\\n\\n        </li>\\n        <!-- <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\" data-uid=\\\"uid70156\\\">About</a>\\n        </li> -->\\n      </ul>\\n       \\n    </div>\\n  </nav>\\n\\n\\n  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\n\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  logged:any = null; \n\n  constructor(private _userService: UserService) { \n    this.logged = this._userService.logged;\n  }\n\n  ngOnInit() {\n  }\n\n  doLogout() {\n    this._userService.doLogout();\n    return false;\n  }\n\n  dispUserName() {\n    let u = '';\n    if(this.logged.token) {\n      u = this.logged.user.username;\n      // if(this.logged.user.level ==2) {\n      //   u = `~~${u}~~`;\n      // }\n    }\n    return u;\n  }\n\n  dispUserId() {\n    let i = '';\n    if(this.logged.token) {\n      i = this.logged.user._id;\n      // if(this.logged.user.level ==2) {\n      //   u = `~~${u}~~`;\n      // }\n    }\n    return i;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Product} from './product';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  private _endpointOrders = `http://localhost:3000/shopping/api/orders`;\n\n  constructor(private _http : HttpClient) {}\n\n  createOrder(params) {    \n    return this._http.post< any >(this._endpointOrders,params);\n  }\n\n  // closeOrder(params){\n  //   let call = `${this._endpointOrders}/push-order`;\n  //   if(params){\n  //     call += `/${params.id}`;\n  //   return this._http.get< any >(call);\n   \n  //   }\n \n  // }\n  \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n        <div class=\\\"  col-md-6 box form-group\\\">\\n            <div class=\\\"inner\\\">\\n                <div class=\\\"col-md-12\\\">\\n                   \\n                  <cart></cart>\\n                  \\n                    \\n                  </div>\\n              </div>\\n         \\n        </div>\\n        <div class=\\\"  col-md-6 box form-group\\\">\\n           <shipping></shipping>\\n         \\n        </div>\\n        \\n      </div>\\n      \\n    \\n    \\n    \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Product {\n\n    \"_id\" : string;\n    \"product_name\" : string;\n    \"_category\" : string;\n    \"price\" : number;\n    \"picture\" : string;\n  //id: number;\n\n}\n\n\n// export class Product {\n//     constructor(public id:number, public first_name : String,public added : boolean, public last_name : String, public current_location : String, public current_company : String, public total_experience : String, profile_picture : String, current_role : String) {}\n//    }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Product} from './product';\nimport {BehaviorSubject, Observable, Subject, Subscriber} from 'rxjs';\nimport { ListProductState } from './ListProductState';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  private _endpointProducts = `http://localhost:3000/shopping/api/products`;\n  constructor(private _http : HttpClient) {}\n\n  private listProductSubject = new Subject<ListProductState>();\n  Products : Product[]= [];\n  ListProductState = this.listProductSubject.asObservable();\n\n\n  \n\n   public getProducts(){\n    let call = this._endpointProducts;\n    return this._http.get< any >(call);\n\n  }\n\n  getproductsByCategory(params:any = null) {\n    let call = this._endpointProducts;\n   \n    if(params) {\n      if(params.id) {\n        call += `/${params.id}`; // have categories id GET /categories/:id\n        console.log(call) \n      }\n      // else if(params.uid) {\n      //   call += `/user/${params.uid}`; // have user id GET /categories/user/:id       \n      // }      \n    }\n    console.log(call) \n    return this._http.get< any >(call);\n  }\n\n\n\n  getProductById(params) : Observable<Product> {\n    let call = this._endpointProducts;\n    if(params){\n      call += `/${params.id}`;\n    return this._http.get< any >(call);\n  }\n\n  }\n\n  createProduct(params) { \n    this.addProductToList;   \n    return this._http.post< any >(this._endpointProducts,params);\n    \n  }\n\n  // updateProduct(params) { \n  //   this.addProductToList;   \n  //   return this._http.put< any >(this._endpointProducts,params);\n    \n  // }\n\n  addProductToList(_product:any){\n    console.log('add product to list');\n    this.Products.push(_product)\n    this.listProductSubject.next(<ListProductState>{ products:  this.Products});\n    this.getProducts();\n  }\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n}\n\n\n","module.exports = \".btn-primary {\\r\\n                background-color: #E7A331;\\r\\n                color: #ffffff;\\r\\n                border: 2px solid #E7A331;\\r\\n                text-transform: uppercase;\\r\\n                border-radius: 4px;\\r\\n            }\\r\\n            .btn-primary:hover {\\r\\n                background-color: #d6962c;\\r\\n                border-color: #d6962c;\\r\\n                color: #fff;\\r\\n            }\\r\\n            /*BOOTSNIP CARD SHOP*/\\r\\n            /* * {\\r\\n  font-family: \\\"Roboto\\\";\\r\\n  list-style: none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  text-decoration: none;\\r\\n  letter-spacing: 1px;\\r\\n  box-sizing: border-box;\\r\\n} */\\r\\n            /* body {\\r\\n  background: #f9fafa;\\r\\n  padding: 20px;\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -webkit-box-pack: center;\\r\\n      -ms-flex-pack: center;\\r\\n          justify-content: center;\\r\\n  -ms-flex-wrap: wrap;\\r\\n      flex-wrap: wrap;\\r\\n} */\\r\\n            .block {\\r\\n  margin: 20px;\\r\\n  border-radius: 4px;\\r\\n  width: 27%;\\r\\n  /* min-height: 430px; */\\r\\n  background: #fff;\\r\\n  padding: 23px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  box-shadow: 0 2px 55px rgba(0,0,0,0.1);\\r\\n}\\r\\n            .top {\\r\\n  border-bottom: 1px solid #e5e5e5;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n            .top ul {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n}\\r\\n            .top a {\\r\\n  color: #9e9e9e;\\r\\n}\\r\\n            .top a:hover {\\r\\n  color: #c7ccdb;\\r\\n}\\r\\n            .converse {\\r\\n  padding: 2px 10px;\\r\\n  border-radius: 20px;\\r\\n  text-transform: uppercase;\\r\\n  font-size: 14px;\\r\\n}\\r\\n            .middle {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n            .middle img {\\r\\n  width: 100%;\\r\\n}\\r\\n            .bottom {\\r\\n  text-align: center;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: space-between;\\r\\n  -webkit-box-flex: 1;\\r\\n      -ms-flex-positive: 1;\\r\\n          /* flex-grow: 1; */\\r\\n}\\r\\n            .heading {\\r\\n  font-size: 17px;\\r\\n  text-transform: uppercase;\\r\\n  margin-bottom: 5px;\\r\\n  letter-spacing: 0;\\r\\n}\\r\\n            .info {\\r\\n  font-size: 14px;\\r\\n  color: #969696;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n            .style {\\r\\n  font-size: 16px;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n            /* .old-price {\\r\\n  color: #f00;\\r\\n  text-decoration: line-through;\\r\\n} */\\r\\n            /* .portfolio{\\r\\n                background:url(./assets/Mix2.jpg) center top no-repeat;\\r\\n                -moz-background-size: cover;\\r\\n                -webkit-background-size: cover;\\r\\n                -o-background-size: cover;\\r\\n                background-size: cover;\\r\\n                width: 100%;\\r\\n                overflow: hidden;\\t\\r\\n            } */\\r\\n            /* .portfolio_content{\\r\\n                padding-bottom:120px;\\r\\n                display:inline-block;\\r\\n            }\\r\\n            .portfolio .portfolio_content .head_title h3{\\r\\n                color:#000000;\\r\\n            }\\r\\n            .portfolio .portfolio_content .head_title h4{\\r\\n                color:#000000;\\r\\n            }\\r\\n\\r\\n            .single_portfolio_text{\\r\\n                display:inline-block;\\r\\n                padding: 0 5px 2.5px 5px;\\r\\n                position:relative;\\r\\n                overflow:hidden;\\r\\n\\r\\n            }\\r\\n            .single_portfolio_text img{\\r\\n                width:100%;\\r\\n            }\\r\\n\\r\\n            .single_portfolio_text:hover .portfolio_images_overlay{\\r\\n                top:5%;\\r\\n                left: 5%;\\r\\n            }\\r\\n\\r\\n            .portfolio_images_overlay{\\r\\n                width: 90%;\\r\\n                height: 90%;\\r\\n                background: rgba(0, 0, 0, .5);\\r\\n                padding: 20px;\\r\\n                margin: 0 auto;\\r\\n                top:-100%;\\r\\n                left: 5%;\\r\\n                position: absolute;\\r\\n                transition:.6s;\\r\\n            }\\r\\n            .portfolio_images_overlay h6{\\r\\n                text-transform:uppercase;\\r\\n                color:#fff;\\r\\n                font-size:2rem;\\r\\n                line-height:2.575rem;\\r\\n                font-weight: 500;\\r\\n                margin-bottom: 1rem;\\r\\n                margin-top: 1rem;\\r\\n                cursor:pointer\\r\\n            }\\r\\n\\r\\n            .portfolio_images_overlay p.product_price{\\r\\n                font-size:2.5725rem;\\r\\n                color:#fff;\\r\\n                line-height:3rem;\\r\\n            }\\r\\n            .portfolio_images_overlay .btn{\\r\\n                margin-top: 25px;\\r\\n            }\\r\\n\\r\\n            @media (min-width:769px) and (max-width:991px) {\\r\\n                .portfolio_images_overlay {\\r\\n                    padding: 0px;\\r\\n                }\\r\\n            }\\r\\n            @media (max-width:768px) {\\r\\n                .portfolio_images_overlay{\\r\\n                    padding: 170px 20px;\\r\\n                }\\r\\n            }\\r\\n            @media (max-width:580px) {\\r\\n                .portfolio_images_overlay{\\r\\n                    padding: 100px 20px;\\r\\n                }\\r\\n            }\\r\\n            @media (max-width:480px) {\\r\\n                .portfolio_images_overlay{\\r\\n                    padding: 40px 20px;\\r\\n                }\\r\\n            }\\r\\n            @media (max-width:320px) {\\r\\n                .portfolio_images_overlay{\\r\\n                    padding: 20px;\\r\\n                }\\r\\n            } */\\r\\n\"","module.exports = \"<div *ngIf=\\\"!isAdmin\\\" class=\\\"row\\\">\\n\\n  <div  (click)=\\\"open(content); onSelect(product);\\\" *ngFor=\\\"let product of products\\\" >\\n\\n    <div class=\\\"middle\\\"><img [src]=\\\" 'http://localhost:3000/'+product.picture\\\" [alt]=\\\"product.product_name\\\" [title]=\\\"product.product_name\\\"></div>\\n\\n    <div class=\\\"bottom\\\">\\n      <div class=\\\"price\\\">{{price}}{{product.price}} </div>\\n      <div class=\\\"heading\\\"> <a routerLink=\\\"/shop/product/{{id}}\\\">{{product.product_name}}</a></div>\\n      <div class=\\\"info\\\">{{product._category.category_name | json}}</div>\\n      <div class=\\\"style\\\">{{product._id}}</div>\\n    </div>\\n\\n\\n    <ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">The product you choose !!</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"item-name\\\">\\n        </div>\\n        <div class=\\\"middle\\\"><img [src]=\\\" 'http://localhost:3000/'+product.picture\\\" [alt]=\\\"product.product_name\\\" [title]=\\\"product.product_name\\\"></div>\\n\\n        <div class=\\\"bottom\\\">\\n          <div class=\\\"price\\\"> {{price}}{{product.price}} </div>\\n          <div class=\\\"heading\\\"> <a routerLink=\\\"/shop/product/{{id}}\\\">{{product.product_name}}</a></div>\\n          <div class=\\\"info\\\">{{product._category.category_name | json}}</div>\\n          <div class=\\\"style\\\">{{product._id}}</div>\\n        </div>\\n        <form [formGroup]=\\\"formGroup\\\">\\n          <div class=\\\"form-group\\\">\\n            <!-- <label for=\\\"product._id\\\">product._id</label> -->\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"productId\\\" class=\\\"form-control\\\" formControlName=\\\"productId\\\" />\\n\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"quantity\\\">Select quantity</label>\\n            <!-- <select [(ngModel)]=\\\"quantity\\\" class=\\\"form-control\\\" formControlName=\\\"Quantity\\\">\\n              <option>1</option>\\n              <option>2</option>\\n              <option>3</option>\\n              <option>4</option>\\n              <option>5</option>\\n            </select> -->\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"quantity\\\" formControlName=\\\"Quantity\\\">\\n          </div>\\n        </form>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Save click')\\\">Close</button> -->\\n        <!-- <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"addToCart(product)\\\">Add</button> -->\\n\\n        <div class=\\\"product__button-wrap\\\">\\n          <!-- <button  *ngIf=\\\"product.added\\\"  (click)=\\\"RemoveProduct(product)\\\" class=\\\"btn btn-primary\\\">Remove -->\\n          <!-- </button> -->\\n          <button (click)=\\\"AddProduct(product);c('Save click')\\\" class=\\\"btn btn-primary\\\">Add to\\n            cart\\n          </button>\\n          <!-- <button (click)=\\\"addToCart(product)\\\" class=\\\"btn btn-sm btn-primary\\\">Add to Cart</button> -->\\n         \\n        \\n      </div>\\n    </div>\\n    </ng-template>\\n\\n    <hr>\\n\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"isAdmin\\\" class=\\\"row\\\">\\n  <div  (click)=\\\" onSelect(product);\\\" *ngFor=\\\"let product of products\\\">\\n\\n    <div class=\\\"middle\\\"><img [src]=\\\" 'http://localhost:3000/'+product.picture\\\" [alt]=\\\"product.product_name\\\" [title]=\\\"product.product_name\\\"></div>\\n\\n    <div class=\\\"bottom\\\">\\n      <div class=\\\"price\\\">{{price}}{{product.price}} </div>\\n      <div class=\\\"heading\\\"> <a routerLink=\\\"/shop/product/{{id}}\\\">{{product.product_name}}</a></div>\\n      <div class=\\\"info\\\">{{product._category.category_name | json}}</div>\\n      <div class=\\\"style\\\">{{product._id}}</div>\\n    </div>\\n    <hr>\\n  </div>\\n</div>\\n\\n<!-- ////////////////////////////////// -->\\n\\n<!-- <div class=\\\"row\\\">\\n  <div *ngFor=\\\"let product of products\\\">\\n      <div class=\\\"col-xs-4 padding-10\\\">\\n          <mat-card class=\\\"card-container-phone\\\">\\n              <mat-card-header>\\n                  <div md-card-avatar class=\\\"example-header-image\\\"></div>\\n                  <md-card-title>\\n                      <span class=\\\"badge\\\">{{product.id}}</span> <strong>{{product.name}}</strong>    \\n                  </md-card-title>\\n              </mat-card-header>\\n\\n              <img width=\\\"220\\\" height=\\\"220\\\" class=\\\"image-align-center padding-bottom-10\\\" src={{product.src}} />\\n              <mat-card-content>\\n              <p>{{product.info}}</p>\\n              </mat-card-content>\\n              <mat-card-actions>\\n                  <div style=\\\"display: flex\\\">\\n                      <span class=\\\"padding-right-5\\\">Quantity: </span>\\n                      <input type=\\\"number\\\" [(ngModel)]=\\\"quantity\\\">\\n                  </div>\\n                  <h1 class=\\\"badge\\\">${{product.price}}</h1>\\n                  <button (click)=\\\"addToCart(product)\\\" class=\\\"btn btn-sm btn-primary\\\">Add to Cart</button>\\n                  <button (click)=\\\"clickedProduct(product)\\\" class=\\\"btn btn-sm btn-success\\\">Details</button>\\n              </mat-card-actions>\\n          </mat-card>\\n      </div>\\n\\n      <div class=\\\"col-xs-4\\\">\\n          <div class=\\\"thumbnail product\\\">\\n              <img width=\\\"250\\\" height=\\\"250\\\" src={{product.src}} />\\n              <span class=\\\"badge\\\">{{product.id}}</span> <strong>{{product.name}}</strong>\\n              <p>{{product.info}}</p>\\n              <h1 class=\\\"badge\\\">${{product.price}}</h1>\\n              <button (click)=\\\"addToCart(product)\\\" class=\\\"btn btn-sm btn-primary\\\">Add to Cart</button>\\n              <button (click)=\\\"clickedProduct(product)\\\" class=\\\"btn btn-sm btn-success\\\">Details</button>\\n          </div>\\n      </div>-->\\n  <!-- </div> -->\\n<!-- </div> -->\\n\\n\"","import {ChangeDetectionStrategy, Component,NgModule, OnInit , Input , EventEmitter } from '@angular/core';\nimport {NgbModal, ModalDismissReasons,NgbActiveModal} from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule,ReactiveFormsModule  } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n import { Product } from '../product';\n import { CartService } from '../cart.service';\n import { Location } from '@angular/common';\n import {Subscription} from 'rxjs';\n import {CartState} from '../CartState';\n import {ListProductState} from '../ListProductState';\n import {UserService } from '../user.service';\n\n\n\n\n import {ProductsService} from '../products.service';\n import { ActivatedRoute } from '@angular/router';\n import {Router , ParamMap} from '@angular/router';\n\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n //import {ModalProductComponent} from '../modal-product';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgbdModalContent, SelectModalComponent } from '../select-modal/select-modal.component';\n\n\n@Component({\n  selector: 'products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css'],\n   inputs : ['category' , 'products'],\n   outputs : ['selectProduct'],\n   //changeDetection: ChangeDetectionStrategy.OnPush\n\n\n  \n})\nexport class ProductsComponent implements OnInit {\n  formGroup: FormGroup;\n  closeResult: string;\n \n  public categoryId;\n   products : Array<Product>;\n   public quantity : number;\n   //public id : string;\n   public productId : string;\n   public selectProduct = new EventEmitter();\n   tmp:any = {};\n   //public product: Product ;\n   @Input()product : Product;\n   private subscription : Subscription;\n   logged:any = null;\n   public isAdmin=true;\n  product_name: any;\n  picture: any;\n  price: any;\n  category: any;\n\n  \n    \n  \n  \n  constructor(private modalService: NgbModal,\n              private fb:FormBuilder,\n              private _productsService: ProductsService,\n              private _cartService : CartService ,\n              private router: Router,\n              private route: ActivatedRoute,\n              private location: Location,\n              private _userService: UserService  ) {\n                this.logged = this._userService.logged;\n              }\n\n  Products : Product[] \n\n  onSelect(prod :Product){\n    if(this.logged.user.role==\"Admin\"){\n      this.isAdmin=true;\n      this.selectProduct.emit(prod );\n     \n      //this.router.navigate(['/admin/category' , cat._id]);\n      //alert('admin')\n    }\n    else{\n      this.isAdmin= false;\n    this.selectProduct.emit(prod);\n    this.router.navigate(['/shop/product/',prod._id]);\n\n    console.log(\"product id\",prod._id);\n    } \n  }\n\n  AddProduct(_product : Product) {\n    //_product.added = true;\n    this ._cartService.addProduct(_product);\n      let createParams = {\n       id: this.productId,\n       quantity: this.quantity\n     };\n        this._cartService.addProdToCart(createParams).subscribe( \n          result => {\n            console.log('result',result);\n            //this.router.navigate(['shop'])\n            //this.location.back();\n          },\n          error => {\n            alert('error!');\n          }\n        )   \n}\n\n\n\n// RemoveProduct(_product : Product) {\n//   //_product.added = false;\n//   this\n//       ._cartService\n//       .removeProduct(_product._id);\n// }\n\n  open(content) {\n    \n     this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title',centered: true})\n     .result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n\n  // \"_id\" : ObjectId(\"5b6ef2967bee34dd68bfab17\"),\n  // \"product_name\" : \"product47\",\n  // \"_category\" : ObjectId(\"5b5917e6f413b57c2219e05f\"),\n  // \"price\" : 56,\n  // \"picture\" : \"uploads/1533997718619.isaac1518151809.jpg\",\n\n  // public addToCart(product: Product) {\n  //   this.cartService.addToCart(product);\n  //   this.router.navigateByUrl('/');\n  // }\n\n  ngOnInit() {\n\n    // this.loaderService.show();\n    this.subscription = this\n    ._productsService\n    .ListProductState\n    .subscribe((state : ListProductState) => {\n        this.products = state.products;\n        console.log(this.products);\n    });\n\n    // this._cartService.getProducts().subscribe(\n    //   data => this.Products = data, //Bind to view\n    //    err => {\n    //        // Log errors if any\n    //        console.log(err);\n    //    });\n\n\n    this.formGroup = new FormGroup({\n      Quantity: new FormControl('', [\n        Validators.required\n      ]),\n      productId: new FormControl('', [\n        Validators.required\n      ])\n    });\n  } \n\n  \n\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit,EventEmitter, Input, Output } from '@angular/core';\nimport { NgbModal, ModalDismissReasons,NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder } from '@angular/forms';\nimport {Router } from '@angular/router';\nimport { Product } from '../product';\n\n\n\n@Component({\n  selector: 'ngbd-modal-content',\n  template: `\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">Hi selectModalComponent!</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n    <div class=\"heading\">{{name}}</div>\n    <div class=\"info\">{{category | json}}</div>\n    <div class=\"price\">{{price}} </div>\n    <div class=\"style\">{{id}}</div>\n    <form>\n    <div class=\"form-group\">\n    <label for=\"exampleSelect1\">Select quantity</label>\n    <select class=\"form-control\" id=\"exampleSelect1\">\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </select>\n  </div>\n  </form>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"activeModal.close('Close click')\">Close</button>\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"addToCart()\">Add</button>\n    </div>\n  `\n})\nexport class NgbdModalContent {\n  @Input() name;\n  @Input() category;\n  @Input() price;\n  @Input() id;\n  @Output() clickevent = new EventEmitter<string>();\n\n  constructor(public activeModal: NgbActiveModal,\n       private _router : Router) {}\n  \n  addToCart() {\n    console.log('selectModalComponent11');\n\n  }\n}\n\n@Component({\n  selector: 'select-modal',\n  templateUrl: './select-modal.component.html',\n  styleUrls: ['./select-modal.component.css']\n})\nexport class SelectModalComponent implements OnInit {\n\n  constructor(private modalService: NgbModal) {}\n\n\n  ngOnInit() {\n  }\n\n  \n\n}\n","module.exports = \" .far .fa-lock-alt {\\r\\n    position: absolute;\\r\\n    right: 10px;\\r\\n    top: 7px;\\r\\n }\\r\\n .credit-card {\\r\\n     position :relative\\r\\n }\"","module.exports = \"<div class=\\\"inner\\\">\\n    <div class=\\\"col-md-12\\\">\\n      \\n        <h4>Order</h4>\\n        <hr>\\n        shipping details\\n        <hr>\\n        <form [formGroup]=\\\"formGroup\\\" (validSubmit)=\\\"createOrder()\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"city\\\">City</label>\\n        <select [(ngModel)]=\\\"tmp.city\\\" class=\\\"custom-select\\\" formControlName=\\\"city\\\">\\n            <!-- <option value=''>-- SELECT CITY-- </option> -->\\n          <option *ngFor=\\\"let city of cities\\\" value= {{city.name}}>\\n            {{city.name}}\\n          </option>\\n        </select>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"adress\\\">Adress</label>\\n        <input  [(ngModel)]=\\\"tmp.delivery_adress\\\"  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"deliveryAdress\\\" id=\\\"adress\\\" placeholder=\\\"Adress\\\">\\n      </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"deliveryDate\\\">Shipping date</label>\\n                <div class=\\\"input-group\\\">\\n                  <input [(ngModel)]=\\\"tmp.delivery_date\\\" id=\\\"deliveryDate\\\" class=\\\"form-control\\\" formControlName=\\\"deliveryDate\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\" ngbDatepicker #dp=\\\"ngbDatepicker\\\">\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dp.toggle()\\\" type=\\\"button\\\">\\n                      <img src=\\\"img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\"/>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n              <h4>payments:</h4>\\n              <hr>\\n              <div class=\\\" credit-card form-group\\\">\\n                  <label for=\\\"credit card\\\">credit card</label>\\n                  <i class=\\\"far fa-lock-alt\\\"></i>\\n                  <input [(ngModel)]=\\\"tmp.payment_method\\\"  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"paymentMethod\\\" id=\\\"card\\\"  placeholder=\\\"credit card\\\">\\n                </div>\\n              <!-- <a routerLink=\\\"#\\\" routerLinkActive=\\\"active\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Order</button>\\n              </a> -->\\n            <!-- <a routerLink=\\\"/sign-in\\\" routerLinkActive=\\\"active\\\">Sign up</a> -->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"!formGroup.valid\\\" (click)=\\\"open(content)\\\">Order</button>\\n\\n          </form>\\n       <!-- <a routerLink=\\\"#\\\" routerLinkActive=\\\"active\\\">\\n          <button class=\\\"btn btn-lg btn-outline-primary\\\" (click)=\\\"open(content)\\\">Order</button>\\n</a> -->\\n\\n<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Profile update</h4>\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <form>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"dateOfBirth\\\">Date of birth</label>\\n          <div class=\\\"input-group\\\">\\n            <input id=\\\"dateOfBirth\\\" class=\\\"form-control\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\" ngbDatepicker #dp=\\\"ngbDatepicker\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"dp.toggle()\\\" type=\\\"button\\\">\\n                <img src=\\\"img/calendar-icon.svg\\\" style=\\\"width: 1.2rem; height: 1rem; cursor: pointer;\\\"/>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </form>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"c('Save click')\\\">Save</button>\\n    </div>\\n  </ng-template>\\n  \\n  \\n  <hr>\\n  \\n  <pre>{{closeResult}}</pre>\\n      \\n        \\n      </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport {OrderService} from '../order.service';\nimport { UserService } from '../user.service';\nimport {Router } from '@angular/router';\nimport { City } from '../city';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n\n\n\n\n\n@Component({\n  selector: 'shipping',\n  templateUrl: './shipping.component.html',\n  styleUrls: ['./shipping.component.css']\n})\nexport class ShippingComponent implements OnInit {\n  closeResult: string;\n  formGroup: FormGroup;\n  tmp:any = {};\n  createParams:any = {user:null,\n                      cart:null,\n                      total_amount:null,\n                      delivery_date:null};\n  logged:any = null;\n\n  cities = [\n    new City(1, 'Tel-aviv' ),\n    new City(2, 'Jerusalem' ),\n    new City(3, 'Haifa' ),\n    new City(4, 'Hertzelia')\n ];\n \n\n  constructor(private modalService: NgbModal,\n    private _orderService: OrderService,\n    private _userService: UserService,\n    private _router : Router)\n   {\n    this.logged = this._userService.logged;\n   }\n\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n  // \"_id\" : ObjectId(\"5b8ff03ebc02d12d44c90c44\"),\n  // \"city\" : \"next step\",\n  // \"delivery_adress\" : \"next step\",\n  // \"delivery_date\" : ISODate(\"2018-09-05T15:01:42.721Z\"),\n  // \"payment_method\" : \"next step\",\n  // \"_user\" : ObjectId(\"5b6af8af533696dbf49424b6\"),\n  // \"_cart\" : ObjectId(\"5b6ef17a7bee34dd68bfab14\"),\n  // \"total_amount\" : ObjectId(\"5b6af53d79f7c3d0b4cc3375\"),\n  // \"order_date\" : ISODate(\"2018-09-05T15:03:26.758Z\"),\n  createOrder(){\n    this.createParams.user =this.logged.user.id;\n    this.createParams.cart =this.logged.user.cart;\n    //this.createParams.total_amount =this.logged.user.total_amount;\n    //this.createParams.order_date =this.logged.user.order_date;\n\n    this.createParams.city =this.tmp.city.trim(); \n    this.createParams.delivery_adress =this.tmp.delivery_adress.trim(); \n    this.createParams.delivery_date =JSON.stringify(this.tmp.delivery_date); \n    this.createParams.payment_method =this.tmp.payment_method.trim(); \n    console.log('params',this.createParams)\n    //  if(this.createParams.city!=''&& this.createParams.adress !='' &&\n    //   this.createParams.first_name !='' && this.createParams.last_name !='' ) {\n      this._orderService.createOrder(this.createParams).subscribe( \n        result => {\n          //this.loadUsers();\n          //this.tmp.id = null;\n          console.log(result);\n        },\n        error => {\n          alert('error!');\n        }\n       \n      ),\n      this._router.navigate(['/home']);\n     \n    // }\n  }\n\n  ngOnInit() {\n    this.formGroup = new FormGroup({\n      city: new FormControl('', [\n        Validators.required\n       \n      ]),\n      deliveryAdress: new FormControl('', [\n        Validators.required\n       \n      ]),\n      deliveryDate: new FormControl('', [\n        Validators.required\n    \n      ]),\n      paymentMethod: new FormControl('', [\n        // Validators.pattern(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|(222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11}|62[0-9]{14})$/),\n        Validators.required\n     \n      ]),\n    });\n  }\n\n}\n","module.exports = \"/* .box{ */\\r\\n    /* resize: both;\\r\\n    overflow: auto;\\r\\n    border : 1px solid ; */\\r\\n    /* } */\\r\\n    .box {\\r\\n    position: relative;\\r\\n    /* top: 200px; */\\r\\n    /* display: flex; */\\r\\n    /* align-items: center;\\r\\n    justify-content: center; */\\r\\n    /* width: 300px; */\\r\\n    height: 520px;\\r\\n    /* background-color: #fd4140; */\\r\\n    border: solid 1px #121621;\\r\\n    color: #121621;\\r\\n    margin: auto;\\r\\n  }\\r\\n    .resize-handle {\\r\\n    position: absolute;\\r\\n    bottom: 10px;\\r\\n    right: 10px;\\r\\n    cursor: se-resize;\\r\\n  }\\r\\n    .row-product{\\r\\n    /* height:520px; */\\r\\n    overflow:hidden;\\r\\n  }\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"  col-md-4 box form-group\\\">\\n        <div class=\\\"inner\\\">\\n            <div class=\\\"col-md-12\\\">\\n               \\n              <cart> </cart>\\n              \\n                \\n              </div>\\n          </div>\\n     \\n    </div>\\n\\n    <!-- <div\\n    class=\\\" col-md-4 box form-group\\\"\\n    [ngStyle]=\\\"style\\\"\\n    mwlResizable\\n    [validateResize]=\\\"validate\\\"\\n    [resizeEdges]=\\\"{bottom: true, right: true, top: true, left: true}\\\"\\n    [enableGhostResize]=\\\"true\\\"\\n    [resizeSnapGrid]=\\\"{left: 50, right: 50}\\\"\\n    (resizeEnd)=\\\"onResizeEnd($event)\\\">\\n    <img\\n      src=\\\"http://i.imgur.com/eqzz2dl.gif\\\"\\n      class=\\\"resize-handle\\\"\\n      mwlResizeHandle\\n      [resizeEdges]=\\\"{bottom: true, right: true}\\\">\\n      <div class=\\\"inner\\\">\\n            <div class=\\\"col-md-12\\\">\\n               \\n              <cart></cart>\\n              \\n                \\n              </div>\\n          </div>\\n  </div> -->\\n    <div class=\\\"  col-md-8 box form-group\\\">\\n            <div class=\\\"row\\\">\\n                    <div class=\\\"inner\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                              <!-- <categories [parentData] = \\\"categories\\\"></categories> -->\\n    <categories (selectCategory) = \\\"onSelectCategory($event)\\\" [categories] = \\\"categories\\\"></categories>\\n\\n                              </div>\\n                          </div>\\n            </div>\\n\\n\\n\\n            \\n        <div class=\\\"row row-product\\\">\\n                <div class=\\\"inner\\\">\\n                        <div class=\\\"col-md-12\\\">\\n     <products *ngIf =\\\"selectedCategory\\\"  [category] = \\\"selectedCategory\\\" ></products>\\n                          </div>\\n                      </div>\\n        </div>\\n        <div class=\\\"row row-product\\\">\\n            <div class=\\\"inner\\\">\\n                    <div class=\\\"col-md-12\\\">\\n     <products  [products] = \\\"products\\\" ></products>\\n                      </div>\\n                  </div>\\n    </div>\\n        \\n     \\n    </div>\\n    \\n  </div>\\n  \\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport { Category } from '../category';\nimport { CategoryService } from '../category.service';\nimport {Router , ParamMap} from '@angular/router';\nimport { ProductsService } from '../products.service';\n import { Product } from '../product';\n import {ActivatedRoute} from '@angular/router';\nimport {CartService} from '../cart.service';\n\n\n\n\n\n@Component({\n  selector: 'app-shop',\n  templateUrl: './shop.component.html',\n  styleUrls: ['./shop.component.css'],\n\n})\nexport class ShopComponent implements OnInit {\n\n\ncategories : Array<Category>;\ncart : Product[];\n  products : Array<Product>;\n\nselectedCategory : Category;\nselectedProduct : Product;\n  public style: object = {};\n  public id : string;\n\n  validate(event: ResizeEvent): boolean {\n    const MIN_DIMENSIONS_PX: number = 50;\n    if (\n      event.rectangle.width &&\n      event.rectangle.height &&\n      (event.rectangle.width < MIN_DIMENSIONS_PX ||\n        event.rectangle.height < MIN_DIMENSIONS_PX)\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  onResizeEnd(event: ResizeEvent): void {\n    this.style = {\n      position: 'fixed',\n      left: `${event.rectangle.left}px`,\n      top: `${event.rectangle.top}px`,\n      width: `${event.rectangle.width}px`,\n      height: `${event.rectangle.height}px`\n    };\n  }\n\n  constructor(private _categoryService: CategoryService ,\n              private _router : Router,\n              private route : ActivatedRoute,\n              private _productsService: ProductsService,\n              private _cartService: CartService) { }\n\n  ngOnInit() {\nthis._categoryService.getCategories()\n.subscribe(resCategoryData=>this.categories = resCategoryData);\nconsole.log(this.categories);\n  // this._productsService.getproductsByCategory()\n  //  .subscribe(resProductsData=>this.products = resProductsData)\n  this.route.paramMap.subscribe((params : ParamMap)=>{\n      this.id = params.get('id');\n\n      this._productsService.getproductsByCategory({id:this.id})\n      .subscribe(resProductsData=>this.products = resProductsData)\n     console.log('pro',this.products);\n     });\n     this._productsService.getProducts()\n     .subscribe(resProductsData=>this.products = resProductsData);\n     console.log(this.products);\n     \n     \n  }\n\n  onSelectCategory(category : any){ \n    // this.selectedCategory = category;\n    this.selectedCategory = category;\n    //this.selectedProduct = this.products\n\n    console.log(\"category\",this.selectedCategory);\n    console.log(\"products\",this.products);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"  col-md-6 box form-group\\\">\\n        <div class=\\\"inner\\\">\\n            <div class=\\\"col-md-12\\\">\\n                Sign-in user step-1\\n                <hr>\\n                <form [formGroup]=\\\"formGroup\\\" (validSubmit)=\\\"checkUserStepOne()\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"id\\\">ID</label>\\n                      <input [(ngModel)]=\\\"tmp.ID\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ID\\\" formControlName=\\\"ID\\\" placeholder=\\\"Enter your ID\\\">\\n                     \\n                    </div>\\n                   \\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"control-label\\\">Email</label>\\n                      <input [(ngModel)]=\\\"tmp.username\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Email\\\">\\n                    </div>\\n                   \\n                      <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label\\\">Password</label>\\n                        <input [(ngModel)]=\\\"tmp.password\\\" type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\" placeholder=\\\"Password\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"PasswordConfirm\\\">Password confirm</label>\\n                        <input [(ngModel)]=\\\"tmp.passwordConfirm\\\"   type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"PasswordConfirm\\\" id=\\\"PasswordConfirm\\\" placeholder=\\\"Password confirm\\\" required>\\n                        <div class=\\\"invalid-feedback\\\">Sorry, password do not match. Try another?</div>\\n                      </div>\\n                      <!-- <a routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\"> -->\\n                        <!-- <button (click)=\\\"checkUserStepOne()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Continue</button> -->\\n                      <!-- </a> -->\\n                      <!-- <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"onReset()\\\">Reset</button> -->\\n                       <!-- <button class=\\\"btn btn-primary pull-right\\\" type=\\\"submit\\\">Continue</button> -->\\n                       <button class=\\\"btn btn-primary pull-right\\\" type=\\\"submit\\\" [disabled]=\\\"!formGroup.valid\\\">Continue</button>\\n                   \\n                  \\n              \\n                  </form>\\n              \\n              \\n                \\n              </div>\\n          </div>\\n     \\n    </div>\\n    <div class=\\\"  col-md-6 box form-group\\\">\\n        <div class=\\\"inner\\\">\\n            <div class=\\\"col-md-12\\\">\\n                Sign-in user step-2\\n                <hr>\\n                <form [formGroup]=\\\"formGroup1\\\" (validSubmit)=\\\"createNewUser()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"city\\\">City</label>\\n                <select [(ngModel)]=\\\"tmp.city\\\" class=\\\"custom-select\\\" formControlName=\\\"city\\\">\\n                    <!-- <option value=''>-- SELECT CITY-- </option> -->\\n                  <option *ngFor=\\\"let city of cities\\\" value= {{city.id}}>\\n                    {{city.name}}\\n                  </option>\\n                </select>\\n              </div>\\n                <!-- <form> -->\\n                    <!-- <div class=\\\"form-group\\\">\\n                        <select  [(ngModel)]=\\\"tmp.city\\\" class=\\\"custom-select\\\">\\n                          <option selected=\\\"\\\">City</option>\\n                          <option value=\\\"1\\\">Ashdod</option>\\n                          <option value=\\\"2\\\">Jerusalem</option>\\n                          <option value=\\\"3\\\">Haifa</option>\\n                        </select>\\n                      </div> -->\\n                      <!-- <div class=\\\"form-group\\\">\\n                        <label for=\\\"city\\\">City</label>\\n                        <input  [(ngModel)]=\\\"tmp.city\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\" placeholder=\\\"Street\\\" required>\\n                      </div> -->\\n                   \\n                    <div class=\\\"form-group\\\">\\n                      <label for=\\\"adress\\\">Adress</label>\\n                      <input  [(ngModel)]=\\\"tmp.adress\\\"  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"adress\\\" id=\\\"adress\\\" placeholder=\\\"Adress\\\">\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"firstName\\\">First name</label>\\n                        <input  [(ngModel)]=\\\"tmp.first_name\\\"  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"first_name\\\" id=\\\"firstName\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"name\\\" required>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"lastName\\\">Last name</label>\\n                        <input  [(ngModel)]=\\\"tmp.last_name\\\"  type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"last_name\\\" id=\\\"lastName\\\" placeholder=\\\"Last name\\\" required>\\n                      </div>\\n                   \\n                      <!-- <a routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\"> -->\\n                        <!-- <button (click)=\\\"createNewUser()\\\"  class=\\\"btn btn-primary\\\">Submit</button> -->\\n                        <button class=\\\"btn btn-primary pull-right\\\" [disabled]=\\\"!formGroup1.valid\\\" type=\\\"submit\\\">Submit</button>\\n                        <!-- <button class=\\\"btn btn-success\\\"[disabled]=\\\"!myForm.valid\\\"> -->\\n                      <!-- </a> -->\\n                    <!-- <a routerLink=\\\"/sign-in\\\" routerLinkActive=\\\"active\\\">Sign up</a> -->\\n              \\n                   </form>\\n              \\n              \\n                \\n              </div>\\n          </div>\\n     \\n    </div>\\n    \\n  </div>\\n  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { City } from '../city';\nimport {Router } from '@angular/router';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {OrderService} from '../order.service';\n\n\n\n\n@Component({\n  selector: 'sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n  formGroup: FormGroup;\n  formGroup1: FormGroup;\n  tmp:any = {};\n  createParams:any = {};\n\n   cities = [\n     new City(1, 'Tel-aviv' ),\n     new City(2, 'Jerusalem' ),\n     new City(3, 'Haifa' ),\n     new City(4, 'Hertzelia')\n  ];\n  \n\n  constructor(private _userService: UserService,private _orderService: OrderService,\n       private _router : Router) { }\n\n  ngOnInit() {\n    this.formGroup = new FormGroup({\n      Email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/)\n      ]),\n      Password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(15)\n      ]),\n      PasswordConfirm: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(20)\n      ]),\n      ID: new FormControl('', [\n        Validators.required,\n        Validators.minLength(9),\n        Validators.maxLength(9)\n      ])\n      \n    });\n    //////\n    this.formGroup1 = new FormGroup({\n      city: new FormControl('', [\n        Validators.required\n       \n      ]),\n      adress: new FormControl('', [\n        Validators.required\n       \n      ]),\n      first_name: new FormControl('', [\n        Validators.required\n    \n      ]),\n      last_name: new FormControl('', [\n        Validators.required\n     \n      ]),\n    });\n  }\n\n  \n \n  // onReset() {\n  //   this.formGroup.reset();\n  // }\n\n  checkUserStepOne(){\n  this.createParams = {\n  ID: this.tmp.ID.trim(),\n  username: this.tmp.username.trim(),\n  password: this.tmp.password.trim(),\n  passwordConfirm: this.tmp.passwordConfirm.trim()\n}\n\n  if(this.createParams.password != this.createParams.passwordConfirm){\n    alert('Password do not match');\n  }\n  else{\n    console.log(this.createParams)\n    console.log(this.formGroup);\n    return this.createParams;\n  }\n  }\n\ncreateNewUser(){\n  \n  this.createParams.city =this.tmp.city.trim(); \n  this.createParams.adress =this.tmp.adress.trim(); \n  this.createParams.first_name =this.tmp.first_name.trim(); \n  this.createParams.last_name =this.tmp.last_name.trim(); \n  console.log('params',this.createParams)\n  //  if(this.createParams.city!=''&& this.createParams.adress !='' &&\n  //   this.createParams.first_name !='' && this.createParams.last_name !='' ) {\n    this._userService.createUser(this.createParams).subscribe( \n      result => {\n        //this.loadUsers();\n        //this.tmp.id = null;\n        console.log(result);\n      },\n      error => {\n        alert('error!');\n      }\n     \n    ),\n    this._router.navigate(['/home']);\n   \n  // }\n}\n\n}\n","import { Injectable } from '@angular/core';\n// make this service implement http interceptor, this is a decorator used in class definition, not dependency\nimport { HttpInterceptor } from '@angular/common/http';\n// using data from api\nimport { UserService } from './user.service';\n\n@Injectable()\n// HttpInterceptor is a decorator forcing service to implement intercept function\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor( private api: UserService) { }\n\n  // loading HTTP_INTERCEPTORS and making it plus this interceptor a provider\n  // makes sure an http request is intercepted and this function is called\n  // right before the request is actually sent to server\n  intercept(req,next) { \n    // if service holds a token (not null, user is logged)\n    if(this.api.token)  {\n      // cloning the request \n      let tokenizedHeader = req.clone({\n        // adding header with authorization\n        setHeaders: {\n          // Adding proper authorization with bearer format to header\n          Authorization: `Bearer ${this.api.token}`\n        }\n      });\n      // procvide a way to continue with operation\n      return next.handle(tokenizedHeader);      \n    }\n    else {\n      // no token, continue with the original request \n      return next.handle(req);\n    }      \n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Router } from '@angular/router';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  logged:any = {\n    token: null,\n    user: null\n  }\n\n  loginmsg:any = {\n    text: null\n  }\n\n  private _endpointUsers = `http://localhost:3000/shopping/api/users`;\n  constructor(private _http : HttpClient ,  private _router : Router) {\n    let _sess = localStorage.getItem('_sess');\n    if(_sess) {\n      this.setLogged(JSON.parse(_sess));\n  }\n}\n\n  setLogged(obj,notice=null,doStore=false) {\n    this.logged.token = obj.token;\n    this.logged.user = obj.user;\n    this.loginmsg.text = notice;\n    if(doStore) {\n      localStorage.setItem('_sess',JSON.stringify(obj));    \n    }\n  }\n\n  createUser(params) {    \n    return this._http.post< any >(this._endpointUsers,params);\n  }\n\n  get token() {\n    return this.logged.token;\n  }\n\n  get role() {\n    return this.logged.token ? this.logged.user.role : 0;\n  }\n\n  get id() {\n    return this.logged.token ? this.logged.user._id : 0;\n  }\n\n  doLogout() {\n    this.setLogged({\n      token: null,\n      user: null\n    },null,true);\n    this._router.navigate(['/']);\n  }\n\n  login(username,password) {\n    return this._http.post< any >(`${this._endpointUsers}/login`,{\n      username: username,\n      password: password\n    }).subscribe(\n      result => {\n        if(result && result.token) {\n          this.setLogged(result,null,true);\n          if(this.logged.user.role==\"Admin\"){\n            this._router.navigate(['/admin']);\n          }\n          else{\n            this._router.navigate(['/shop']);\n          }\n          //this._router.navigate(['/admin']);\n       \n       \n        }\n        else {\n          this.setLogged({\n            token: null,\n            user: null\n          },'Invalid Login',true);\n        }        \n      },\n      err => {\n        this.setLogged({\n          token: null,\n          user: null\n        },'Server Error',true);\n      }\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}